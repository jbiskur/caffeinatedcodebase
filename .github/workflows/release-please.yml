name: Build and Deploy to Staging, prepare Release

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Show package name
        run: 'echo "version ${{ steps.package.outputs.value }}"'
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.FLOWCORE_MACHINE_GITHUB_TOKEN }}
          release-type: node
    outputs:
      prs_created: ${{ steps.release-please.outputs.prs_created }}
      release_created: ${{ steps.release-please.outputs.release_created }}
  extract_info:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.prs_created == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - name: Show my version
        run: 'echo "version ${{ steps.version.outputs.value }}"'

      - name: Extract package name from package.json
        uses: sergeysova/jq-action@v2
        id: package
        with:
          cmd: 'jq .name package.json -r'

      - name: Show package name
        run: 'echo "version ${{ steps.package.outputs.value }}"'

      - name: Extract main entity name from package.json
        uses: sergeysova/jq-action@v2
        id: mainEntity
        with:
          cmd: 'jq .mainEntity package.json -r'

      - name: Show package name
        run: 'echo "version ${{ steps.package.outputs.value }}"'

      - name: Extract tagPath from flowcore.deployment.json
        uses: sergeysova/jq-action@v2
        id: tagPath
        with:
          cmd: 'jq .tagPath flowcore.deployment.json -r'

      - name: Show Manifest Tag Path
        run: 'echo "tagPath ${{ steps.tagPath.outputs.value }}"'

    outputs:
      version: ${{ steps.version.outputs.value }}
      package: ${{ steps.package.outputs.value }}
      mainEntity: ${{ steps.mainEntity.outputs.value }}
      tagPath: ${{ steps.tagPath.outputs.value }}

  build_docker:
    needs: extract_info
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.FLOWCORE_MACHINE_GITHUB_TOKEN }}
          submodules: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::305363105399:role/ECRGithubManager
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ needs.extract_info.outputs.package }}

      - name: Get short SHA
        id: sha
        run: echo "::set-output name=sha7::$(echo ${{ github.sha }} | cut -c 1-7)"
        shell: bash

      - name: Output short SHA
        run: echo "Short SHA is ${{ steps.sha.outputs.sha7 }}"

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ needs.extract_info.outputs.package }}
          IMAGE_TAG: ${{ steps.sha.outputs.sha7 }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    outputs:
      tag: ${{ steps.sha.outputs.sha7 }}

  deploy:
    needs: [ build_docker, extract_info ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with:
          repository: flowcore-io/public-customer-sites-manifests
          ref: main
          path: manifest
          token: ${{ secrets.FLOWCORE_MACHINE_GITHUB_TOKEN }}

      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.42.1

      - name: Update Image Version in the related HelmChart staging.yaml configuration file
        run: |
          yq -i '.${{ needs.extract_info.outputs.tagPath }} = "${{ needs.build_docker.outputs.tag }}"' manifest/configuration/staging.yaml

      - name: Commit the changes
        run: |
          cd manifest
          git config --global user.email "flowcore_platform@flowcore.io"
          git config --global user.name "flowcore-machine"
          git add configuration/staging.yaml
          git commit -m "chore(staging): update ${{ needs.extract_info.outputs.tagPath }} to ${{ needs.build_docker.outputs.tag }}"
          git push
